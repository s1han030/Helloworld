let emojis = ['‚òÄÔ∏è', 'üíß', 'üåΩ', 'üêõ', 'üåæ']; // Dropping emojis
let egg, chick, chicken; // Character sprites
let fallingItems = []; // Falling items
let eggCount = 0; 
let chickCount = { water: 0, corn: 0, bug: 0, grass: 0 }; // Chick item counts
let gameState = "egg"; // Current game stage
let gameOver = false; // Game over status

function setup() {
    createCanvas(800, 600); // Create the canvas
    egg = createDiv('ü•ö'); // Create the egg
    egg.style('font-size', '50px');
    egg.position(mouseX, mouseY);

    // Set an interval to generate falling items
    setInterval(() => {
        for (let i = 0; i < 3; i++) { // Generate 3 emojis every second
            fallingItems.push({ emoji: random(emojis), x: random(width), y: 0 });
        }
    }, 1000);
}

function draw() {
    background(255, 225, 156); // Set background color

    // Update the position of the egg/chick/chicken
    if (gameState === "egg") {
        egg.position(mouseX, mouseY);
    } else if (gameState === "chick") {
        chick.position(mouseX, mouseY);
    } else if (gameState === "chicken") {
        chicken.position(mouseX, mouseY);
    }

    // Draw falling items
    for (let i = fallingItems.length - 1; i >= 0; i--) {
        let item = fallingItems[i];
        textSize(30);
        text(item.emoji, item.x, item.y);
        item.y += 5; // Items fall down

        // Check for collisions
        if (dist(item.x, item.y, mouseX, mouseY) < 25) {
            handleCatch(item.emoji); // Handle caught item
            fallingItems.splice(i, 1); // Remove caught items
        }

        // Remove items that go off the screen
        if (item.y > height) {
            fallingItems.splice(i, 1);
        }
    }

    // Display counts in the upper left corner
    fill(0); // Set text color to black
    textSize(24);
    if (gameState === "egg") {
        text(`‚òÄÔ∏è: ${eggCount}/5`, 20, 30); // Display count of ‚òÄÔ∏è
    } else if (gameState === "chick") {
        text(`üíß: ${chickCount.water}/5`, 20, 30); 
        text(`üåΩ: ${chickCount.corn}/2`, 20, 60);
        text(`üêõ: ${chickCount.bug}/2`, 20, 90);
        text(`üåæ: ${chickCount.grass}/2`, 20, 120); 
    }
}

function handleCatch(caught) {
    if (gameState === "egg" && caught === '‚òÄÔ∏è') {
        eggCount++;
        if (eggCount >= 5) { 
            egg.remove();
            startChick(); // Transform to chick
        }
    } else if (gameState === "chick") {
        if (caught === 'üíß') {
            chickCount.water++;
        } else if (caught === 'üåΩ') {
            chickCount.corn++;
        } else if (caught === 'üêõ') {
            chickCount.bug++;
        } else if (caught === 'üåæ') {
            chickCount.grass++;
        }

        // Check chick status
        if (chickCount.water >= 5
            && (chickCount.corn >= 2  && chickCount.bug >= 2 && chickCount.grass >= 2)) {
            chick.remove();
            startChicken(); // Transform to chicken
        }
    }
}

function startChick() {
    gameState = "chick"; // Enter the second stage
    chick = createDiv('üê§'); // Create chick
    chick.style('font-size', '50px');
    chick.position(mouseX, mouseY);
}

function startChicken() {
    gameState = "chicken"; // Enter the third stage
    chicken = createDiv('üêî');
    chicken.style('font-size', '50px');
}
